import{j as o,r as s}from"./app-DzAKanfO.js";import{c as L}from"./SiteHeader-CAPZqMMC.js";import{u as f,d as F,a as c}from"./index-CpWIITha.js";import{h as A,R as G,P as W,W as V,i as Y,j as q,k as B,l as H,m as D,O as J,n as K}from"./AuthenticatedLayout-CGhbNLHc.js";import{b as v}from"./button-BaVC9LH_.js";var N="AlertDialog",[Q,Ne]=L(N,[A]),i=A(),y=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(G,{...r,...t,modal:!0})};y.displayName=N;var U="AlertDialogTrigger",X=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(K,{...l,...r,ref:a})});X.displayName=U;var Z="AlertDialogPortal",x=e=>{const{__scopeAlertDialog:a,...t}=e,r=i(a);return o.jsx(W,{...r,...t})};x.displayName=Z;var ee="AlertDialogOverlay",R=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(J,{...l,...r,ref:a})});R.displayName=ee;var n="AlertDialogContent",[ae,te]=Q(n),oe=F("AlertDialogContent"),_=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,children:r,...l}=e,g=i(t),p=s.useRef(null),z=f(a,p),m=s.useRef(null);return o.jsx(V,{contentName:n,titleName:b,docsSlug:"alert-dialog",children:o.jsx(ae,{scope:t,cancelRef:m,children:o.jsxs(Y,{role:"alertdialog",...g,...l,ref:z,onOpenAutoFocus:q(l.onOpenAutoFocus,d=>{var u;d.preventDefault(),(u=m.current)==null||u.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[o.jsx(oe,{children:r}),o.jsx(se,{contentRef:p})]})})})});_.displayName=n;var b="AlertDialogTitle",j=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(B,{...l,...r,ref:a})});j.displayName=b;var h="AlertDialogDescription",C=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(H,{...l,...r,ref:a})});C.displayName=h;var re="AlertDialogAction",E=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,l=i(t);return o.jsx(D,{...l,...r,ref:a})});E.displayName=re;var w="AlertDialogCancel",P=s.forwardRef((e,a)=>{const{__scopeAlertDialog:t,...r}=e,{cancelRef:l}=te(w,t),g=i(t),p=f(a,l);return o.jsx(D,{...g,...r,ref:p})});P.displayName=w;var se=({contentRef:e})=>{const a=`\`${n}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${n}\` by passing a \`${h}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${n}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(a)},[a,e]),null},le=y,ie=x,S=R,O=_,T=E,$=P,M=j,I=C;const ye=le,ne=ie,k=s.forwardRef(({className:e,...a},t)=>o.jsx(S,{className:c("fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...a,ref:t}));k.displayName=S.displayName;const ce=s.forwardRef(({className:e,...a},t)=>o.jsxs(ne,{children:[o.jsx(k,{}),o.jsx(O,{ref:t,className:c("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...a})]}));ce.displayName=O.displayName;const de=s.forwardRef(({className:e,...a},t)=>o.jsx(M,{ref:t,className:c("text-lg font-semibold",e),...a}));de.displayName=M.displayName;const pe=s.forwardRef(({className:e,...a},t)=>o.jsx(I,{ref:t,className:c("text-sm text-muted-foreground",e),...a}));pe.displayName=I.displayName;const ge=s.forwardRef(({className:e,...a},t)=>o.jsx(T,{ref:t,className:c(v(),e),...a}));ge.displayName=T.displayName;const me=s.forwardRef(({className:e,...a},t)=>o.jsx($,{ref:t,className:c(v({variant:"outline"}),"mt-2 sm:mt-0",e),...a}));me.displayName=$.displayName;export{ye as A,ce as a,de as b,pe as c,me as d,ge as e};
