import React, { useState, useEffect } from "react";
import {
    Star,
    MessageCircle,
    User,
    Calendar,
    ThumbsUp,
    ThumbsDown,
    Building2,
    Stethoscope,
} from "lucide-react";
import { getInitials, getAvatarColor } from "../Shared/utils";
import DoctorReviewCard from "./DoctorReviewCard";
import DoctorPerformanceSummary from "./DoctorPerformanceSummary";
import DoctorReviewModal from "../Modals/DoctorReviewModal";

export default function ReviewsSection({
    clinic,
    auth,
    reviews,
    doctors = [],
}) {
    const [activeTab, setActiveTab] = useState("clinic");
    const [showAllReviews, setShowAllReviews] = useState(false);
    const [sortBy, setSortBy] = useState("recent");
    const [selectedDoctor, setSelectedDoctor] = useState(null);
    const [showDoctorReviewModal, setShowDoctorReviewModal] = useState(false);

    // Review form state
    const [reviewForm, setReviewForm] = useState({
        rating: 0,
        title: "",
        content: "",
    });
    const [isSubmitting, setIsSubmitting] = useState(false);

    // Local reviews state to manage submitted reviews
    const [localReviews, setLocalReviews] = useState(reviews || []);

    const handleDoctorReviewClick = (doctor) => {
        // Check if user is logged in
        if (!auth || !auth.user) {
            alert("Please log in to write a review.");
            return;
        }

        // Check if user is a patient
        if (auth.user.role !== "patient") {
            alert("Only patients can write reviews.");
            return;
        }

        setSelectedDoctor(doctor);
        setShowDoctorReviewModal(true);
    };

    const handleCloseDoctorReviewModal = () => {
        setShowDoctorReviewModal(false);
        setSelectedDoctor(null);
    };

    const handleDoctorReviewSubmitted = (newReview) => {
        // Add the new doctor review to local state
        setLocalReviews((prev) => [newReview, ...prev]);
    };

    // Review form handlers
    const handleStarClick = (rating) => {
        setReviewForm((prev) => ({ ...prev, rating }));
    };

    const handleInputChange = (field, value) => {
        setReviewForm((prev) => ({ ...prev, [field]: value }));
    };

    const handleSubmitReview = async (e) => {
        e.preventDefault();

        if (
            !reviewForm.rating ||
            !reviewForm.title.trim() ||
            !reviewForm.content.trim()
        ) {
            alert("Please fill in all fields and select a rating.");
            return;
        }

        setIsSubmitting(true);

        try {
            // Make API call to submit the review
            const response = await fetch(`/clinics/${clinic.id}/reviews`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "X-CSRF-TOKEN": document
                        .querySelector('meta[name="csrf-token"]')
                        ?.getAttribute("content"),
                    Accept: "application/json",
                },
                body: JSON.stringify({
                    rating: reviewForm.rating,
                    title: reviewForm.title,
                    content: reviewForm.content,
                }),
            });

            if (!response.ok) {
                throw new Error("Failed to submit review");
            }

            const responseData = await response.json();
            const newReview = responseData.review;

            // Add to local reviews state
            setLocalReviews((prev) => [newReview, ...prev]);

            // Reset form
            setReviewForm({ rating: 0, title: "", content: "" });
            alert("Review submitted successfully!");
        } catch (error) {
            console.error("Error submitting review:", error);
            alert("Failed to submit review. Please try again.");
        } finally {
            setIsSubmitting(false);
        }
    };

    // Separate clinic and doctor reviews
    const clinicReviews =
        localReviews?.filter((review) => !review.staff_id) || [];
    const doctorReviews =
        localReviews?.filter((review) => review.staff_id) || [];

    // Always show the tabbed interface, even if there are no reviews
    // This allows users to see the doctor reviews tab and write reviews

    const getRatingColor = (rating) => {
        if (rating >= 4.5) return "text-green-600";
        if (rating >= 4.0) return "text-blue-600";
        if (rating >= 3.5) return "text-yellow-600";
        return "text-gray-600";
    };

    const getRatingBgColor = (rating) => {
        if (rating >= 4.5) return "bg-green-100";
        if (rating >= 4.0) return "bg-blue-100";
        if (rating >= 3.5) return "bg-yellow-100";
        return "bg-gray-100";
    };

    const formatDate = (dateString) => {
        const date = new Date(dateString);
        return date.toLocaleDateString("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
        });
    };

    const sortedReviews = [...reviews].sort((a, b) => {
        switch (sortBy) {
            case "recent":
                return new Date(b.created_at) - new Date(a.created_at);
            case "rating":
                return b.rating - a.rating;
            case "oldest":
                return new Date(a.created_at) - new Date(b.created_at);
            default:
                return 0;
        }
    });

    const displayedReviews = showAllReviews
        ? sortedReviews
        : sortedReviews.slice(0, 3);
    const averageRating =
        reviews.reduce((sum, review) => sum + review.rating, 0) /
        reviews.length;

    return (
        <div className="relative">
            {/* Section Header */}
            <div className="text-center mb-6">
                <div className="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-blue-100 to-cyan-100 rounded-lg border border-blue-200/50 shadow-sm mb-4">
                    <MessageCircle className="w-4 h-4 text-blue-600" />
                    <span className="text-sm font-semibold text-blue-700 tracking-wide">
                        Reviews & Ratings
                    </span>
                </div>
                <h2 className="text-2xl lg:text-3xl font-bold tracking-tight text-gray-900 mb-3">
                    What our{" "}
                    <span className="bg-gradient-to-r from-blue-600 to-cyan-600 bg-clip-text text-transparent">
                        patients say
                    </span>
                </h2>
                <p className="text-sm text-gray-600 max-w-2xl mx-auto">
                    Read authentic reviews from our patients and discover why
                    they choose us.
                </p>
            </div>

            {/* Tab Navigation */}
            <div className="flex items-center justify-center mb-6">
                <div className="bg-gray-100 rounded-lg p-1 flex">
                    <button
                        onClick={() => setActiveTab("clinic")}
                        className={`px-4 py-2 rounded-md font-medium text-sm transition-all duration-200 flex items-center space-x-2 ${
                            activeTab === "clinic"
                                ? "bg-white text-blue-600 shadow-sm"
                                : "text-gray-600 hover:text-gray-900"
                        }`}
                    >
                        <Building2 className="w-3 h-3" />
                        <span>Clinic</span>
                        <span className="bg-blue-100 text-blue-600 px-1.5 py-0.5 rounded-full text-xs">
                            {clinicReviews.length}
                        </span>
                    </button>
                    <button
                        onClick={() => setActiveTab("doctors")}
                        className={`px-4 py-2 rounded-md font-medium text-sm transition-all duration-200 flex items-center space-x-2 ${
                            activeTab === "doctors"
                                ? "bg-white text-blue-600 shadow-sm"
                                : "text-gray-600 hover:text-gray-900"
                        }`}
                    >
                        <Stethoscope className="w-3 h-3" />
                        <span>Doctors</span>
                        <span className="bg-blue-100 text-blue-600 px-1.5 py-0.5 rounded-full text-xs">
                            {doctors.length}
                        </span>
                    </button>
                </div>
            </div>

            {/* Tab Content */}
            {activeTab === "clinic" && (
                <div>
                    {/* Clinic Reviews Content */}
                    {clinicReviews.length > 0 && (
                        <div>
                            {/* Overall Rating Summary */}
                            <div className="bg-gradient-to-br from-blue-50 to-cyan-50 rounded-xl p-4 mb-6 border border-blue-200 shadow-sm">
                                <div className="grid grid-cols-1 md:grid-cols-3 gap-4 items-center">
                                    {/* Rating Display */}
                                    <div className="text-center">
                                        <div className="text-3xl font-bold text-blue-600 mb-2">
                                            {averageRating.toFixed(1)}
                                        </div>
                                        <div className="flex items-center justify-center gap-1 mb-2">
                                            {[1, 2, 3, 4, 5].map((star) => (
                                                <Star
                                                    key={star}
                                                    className={`w-4 h-4 ${
                                                        star <= averageRating
                                                            ? "text-yellow-400 fill-current"
                                                            : "text-gray-300"
                                                    }`}
                                                />
                                            ))}
                                        </div>
                                        <p className="text-gray-600 text-sm">
                                            Based on {clinicReviews.length}{" "}
                                            clinic reviews
                                        </p>
                                    </div>

                                    {/* Rating Distribution */}
                                    <div className="space-y-1.5">
                                        {[5, 4, 3, 2, 1].map((rating) => {
                                            const count = clinicReviews.filter(
                                                (r) => r.rating === rating
                                            ).length;
                                            const percentage =
                                                clinicReviews.length > 0
                                                    ? (count /
                                                          clinicReviews.length) *
                                                      100
                                                    : 0;
                                            return (
                                                <div
                                                    key={rating}
                                                    className="flex items-center gap-2"
                                                >
                                                    <div className="flex items-center gap-1 w-12">
                                                        <span className="text-xs text-gray-600">
                                                            {rating}
                                                        </span>
                                                        <Star className="w-3 h-3 text-yellow-400 fill-current" />
                                                    </div>
                                                    <div className="flex-1 bg-gray-200 rounded-full h-1.5">
                                                        <div
                                                            className="bg-yellow-400 h-1.5 rounded-full transition-all duration-500"
                                                            style={{
                                                                width: `${percentage}%`,
                                                            }}
                                                        ></div>
                                                    </div>
                                                    <span className="text-xs text-gray-600 w-8 text-right">
                                                        {count}
                                                    </span>
                                                </div>
                                            );
                                        })}
                                    </div>

                                    {/* Quick Stats */}
                                    <div className="space-y-2">
                                        <div className="text-center p-3 bg-white rounded-lg shadow-sm border border-blue-100">
                                            <div className="text-lg font-bold text-blue-600 mb-1">
                                                {clinicReviews.length}
                                            </div>
                                            <div className="text-xs text-gray-600">
                                                Clinic Reviews
                                            </div>
                                        </div>
                                        <div className="text-center p-3 bg-white rounded-lg shadow-sm border border-green-100">
                                            <div className="text-lg font-bold text-green-600 mb-1">
                                                {clinicReviews.length > 0
                                                    ? Math.round(
                                                          (clinicReviews.filter(
                                                              (r) =>
                                                                  r.rating >= 4
                                                          ).length /
                                                              clinicReviews.length) *
                                                              100
                                                      )
                                                    : 0}
                                                %
                                            </div>
                                            <div className="text-xs text-gray-600">
                                                Would Recommend
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    )}

                    {/* Submitted Reviews Display */}
                    {clinicReviews.length > 0 && (
                        <div className="mt-8">
                            <div className="bg-white rounded-xl border border-gray-200 shadow-lg p-6">
                                <div className="flex items-center gap-3 mb-6">
                                    <div className="w-10 h-10 bg-gradient-to-br from-green-500 to-emerald-600 rounded-lg flex items-center justify-center">
                                        <MessageCircle className="w-5 h-5 text-white" />
                                    </div>
                                    <div>
                                        <h3 className="text-lg font-bold text-gray-900">
                                            Patient Reviews
                                        </h3>
                                        <p className="text-sm text-gray-600">
                                            {clinicReviews.length} review
                                            {clinicReviews.length !== 1
                                                ? "s"
                                                : ""}{" "}
                                            from our patients
                                        </p>
                                    </div>
                                </div>

                                {/* Reviews Grid - Show max 4 reviews initially, 2 columns on desktop */}
                                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    {clinicReviews
                                        .slice(
                                            0,
                                            showAllReviews
                                                ? clinicReviews.length
                                                : 4
                                        )
                                        .map((review, index) => (
                                            <div
                                                key={review.id || index}
                                                className="bg-gray-50 rounded-lg p-4 border border-gray-100 hover:border-blue-200 transition-all duration-200"
                                            >
                                                {/* Review Header */}
                                                <div className="flex items-start gap-3 mb-3">
                                                    {/* Avatar */}
                                                    <div className="flex-shrink-0">
                                                        <div
                                                            className={`w-8 h-8 rounded-lg flex items-center justify-center text-white font-bold text-sm shadow-sm ${getAvatarColor(
                                                                review.patient
                                                                    ?.user
                                                                    ?.name ||
                                                                    "Anonymous"
                                                            )}`}
                                                        >
                                                            {getInitials(
                                                                review.patient
                                                                    ?.user
                                                                    ?.name ||
                                                                    "Anonymous"
                                                            )}
                                                        </div>
                                                    </div>

                                                    {/* User Info */}
                                                    <div className="flex-1 min-w-0">
                                                        <h4 className="font-semibold text-gray-900 mb-1 text-sm">
                                                            {review.patient
                                                                ?.user?.name ||
                                                                "Anonymous"}
                                                        </h4>
                                                        <div className="flex items-center gap-1 text-xs text-gray-500">
                                                            <Calendar className="w-3 h-3" />
                                                            <span>
                                                                {formatDate(
                                                                    review.created_at
                                                                )}
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>

                                                {/* Rating */}
                                                <div className="flex items-center gap-2 mb-3">
                                                    <div className="flex items-center gap-1">
                                                        {[1, 2, 3, 4, 5].map(
                                                            (star) => (
                                                                <Star
                                                                    key={star}
                                                                    className={`w-3 h-3 ${
                                                                        star <=
                                                                        review.rating
                                                                            ? "text-yellow-400 fill-current"
                                                                            : "text-gray-300"
                                                                    }`}
                                                                />
                                                            )
                                                        )}
                                                    </div>
                                                    <span
                                                        className={`text-xs font-medium ${getRatingColor(
                                                            review.rating
                                                        )}`}
                                                    >
                                                        {review.rating}/5
                                                    </span>
                                                </div>

                                                {/* Review Title */}
                                                {review.title && (
                                                    <h5 className="font-medium text-gray-900 mb-2 text-sm">
                                                        {review.title}
                                                    </h5>
                                                )}

                                                {/* Review Content */}
                                                <p className="text-gray-700 text-xs leading-relaxed">
                                                    {review.content ||
                                                        "No review content provided."}
                                                </p>
                                            </div>
                                        ))}
                                </div>

                                {/* Show More/Less Button */}
                                {clinicReviews.length > 4 && (
                                    <div className="text-center mt-6">
                                        <button
                                            onClick={() =>
                                                setShowAllReviews(
                                                    !showAllReviews
                                                )
                                            }
                                            className="inline-flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-blue-50 to-cyan-50 text-blue-700 font-semibold rounded-lg hover:from-blue-100 hover:to-cyan-100 transition-all duration-200 border border-blue-200 hover:border-blue-300"
                                        >
                                            {showAllReviews ? (
                                                <>
                                                    <span>
                                                        Show Less Reviews
                                                    </span>
                                                    <span className="text-xs bg-blue-200 text-blue-800 px-2 py-1 rounded-full">
                                                        Hide{" "}
                                                        {clinicReviews.length -
                                                            4}{" "}
                                                        reviews
                                                    </span>
                                                </>
                                            ) : (
                                                <>
                                                    <span>
                                                        Show All Reviews
                                                    </span>
                                                    <span className="text-xs bg-blue-200 text-blue-800 px-2 py-1 rounded-full">
                                                        +
                                                        {clinicReviews.length -
                                                            4}{" "}
                                                        more
                                                    </span>
                                                </>
                                            )}
                                        </button>
                                        <p className="text-xs text-gray-500 mt-2">
                                            {showAllReviews
                                                ? `Showing all ${clinicReviews.length} reviews`
                                                : `Showing 4 of ${clinicReviews.length} reviews`}
                                        </p>
                                    </div>
                                )}
                            </div>
                        </div>
                    )}
                </div>
            )}

            {activeTab === "doctors" && (
                <div>
                    {/* Doctor Reviews Content */}
                    {doctors.length > 0 ? (
                        <div>
                            {/* Doctor Performance Summaries */}
                            <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 mb-6">
                                {doctors.map((doctor) => (
                                    <DoctorPerformanceSummary
                                        key={doctor.id}
                                        doctor={doctor}
                                        categoryRatings={
                                            doctor.category_ratings
                                        }
                                        onReviewClick={handleDoctorReviewClick}
                                    />
                                ))}
                            </div>

                            {/* Doctor Reviews Grid */}
                            {doctorReviews.length > 0 && (
                                <div className="mb-8">
                                    <div className="bg-white rounded-xl border border-gray-200 shadow-lg p-6">
                                        <div className="flex items-center gap-3 mb-6">
                                            <div className="w-10 h-10 bg-gradient-to-br from-green-500 to-emerald-600 rounded-lg flex items-center justify-center">
                                                <Stethoscope className="w-5 h-5 text-white" />
                                            </div>
                                            <div>
                                                <h3 className="text-lg font-bold text-gray-900">
                                                    Doctor Reviews
                                                </h3>
                                                <p className="text-sm text-gray-600">
                                                    {doctorReviews.length}{" "}
                                                    review
                                                    {doctorReviews.length !== 1
                                                        ? "s"
                                                        : ""}{" "}
                                                    from our patients
                                                </p>
                                            </div>
                                        </div>

                                        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                                            {doctorReviews
                                                .slice(
                                                    0,
                                                    showAllReviews
                                                        ? doctorReviews.length
                                                        : 6
                                                )
                                                .map((review, index) => (
                                                    <DoctorReviewCard
                                                        key={index}
                                                        review={review}
                                                        showCategoryBreakdown={
                                                            true
                                                        }
                                                    />
                                                ))}
                                        </div>

                                        {/* Show More/Less Button for Doctor Reviews */}
                                        {doctorReviews.length > 6 && (
                                            <div className="text-center mt-6">
                                                <button
                                                    onClick={() =>
                                                        setShowAllReviews(
                                                            !showAllReviews
                                                        )
                                                    }
                                                    className="inline-flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-green-50 to-emerald-50 text-green-700 font-semibold rounded-lg hover:from-green-100 hover:to-emerald-100 transition-all duration-200 border border-green-200 hover:border-green-300"
                                                >
                                                    {showAllReviews ? (
                                                        <>
                                                            <span>
                                                                Show Less
                                                                Reviews
                                                            </span>
                                                            <span className="text-xs bg-green-200 text-green-800 px-2 py-1 rounded-full">
                                                                Hide{" "}
                                                                {doctorReviews.length -
                                                                    6}{" "}
                                                                reviews
                                                            </span>
                                                        </>
                                                    ) : (
                                                        <>
                                                            <span>
                                                                Show All Reviews
                                                            </span>
                                                            <span className="text-xs bg-green-200 text-green-800 px-2 py-1 rounded-full">
                                                                +
                                                                {doctorReviews.length -
                                                                    6}{" "}
                                                                more
                                                            </span>
                                                        </>
                                                    )}
                                                </button>
                                                <p className="text-xs text-gray-500 mt-2">
                                                    {showAllReviews
                                                        ? `Showing all ${doctorReviews.length} reviews`
                                                        : `Showing 6 of ${doctorReviews.length} reviews`}
                                                </p>
                                            </div>
                                        )}
                                    </div>
                                </div>
                            )}

                            {/* Write Doctor Review Section */}
                            {auth &&
                                auth.user &&
                                auth.user.role === "patient" && (
                                    <div className="mt-6">
                                        <div className="bg-white rounded-xl border border-gray-200 shadow-lg p-6">
                                            <div className="flex items-center gap-3 mb-6">
                                                <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-cyan-600 rounded-lg flex items-center justify-center">
                                                    <Star className="w-5 h-5 text-white" />
                                                </div>
                                                <div>
                                                    <h3 className="text-lg font-bold text-gray-900">
                                                        Write a Doctor Review
                                                    </h3>
                                                    <p className="text-sm text-gray-600">
                                                        Share your experience
                                                        with our doctors
                                                    </p>
                                                </div>
                                            </div>

                                            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                                {doctors.map((doctor) => (
                                                    <div
                                                        key={doctor.id}
                                                        className="bg-gray-50 rounded-lg p-4 border border-gray-100 hover:border-blue-200 transition-all duration-200 cursor-pointer"
                                                        onClick={() =>
                                                            handleDoctorReviewClick(
                                                                doctor
                                                            )
                                                        }
                                                    >
                                                        <div className="flex items-center gap-3">
                                                            <div className="w-12 h-12 bg-gradient-to-br from-blue-100 to-cyan-100 rounded-lg flex items-center justify-center">
                                                                <User className="w-6 h-6 text-blue-600" />
                                                            </div>
                                                            <div className="flex-1">
                                                                <h4 className="font-semibold text-gray-900 mb-1">
                                                                    Dr.{" "}
                                                                    {
                                                                        doctor.name
                                                                    }
                                                                </h4>
                                                                <p className="text-sm text-gray-600 mb-2">
                                                                    {doctor.specialization ||
                                                                        "General Dentist"}
                                                                </p>
                                                                <div className="flex items-center gap-1">
                                                                    <Star className="w-4 h-4 text-yellow-400 fill-current" />
                                                                    <span className="text-sm font-medium text-gray-700">
                                                                        {doctor.average_rating
                                                                            ? doctor.average_rating.toFixed(
                                                                                  1
                                                                              )
                                                                            : "0.0"}
                                                                    </span>
                                                                    <span className="text-xs text-gray-500">
                                                                        (
                                                                        {doctor.review_count ||
                                                                            0}{" "}
                                                                        reviews)
                                                                    </span>
                                                                </div>
                                                            </div>
                                                            <div className="text-blue-600">
                                                                <MessageCircle className="w-5 h-5" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                ))}
                                            </div>
                                        </div>
                                    </div>
                                )}
                        </div>
                    ) : (
                        <div className="text-center py-12">
                            <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                <Stethoscope className="w-8 h-8 text-gray-400" />
                            </div>
                            <h3 className="text-lg font-medium text-gray-900 mb-2">
                                No Doctors Available
                            </h3>
                            <p className="text-gray-500">
                                Doctor information will appear here when
                                available.
                            </p>
                        </div>
                    )}

                    {/* Submitted Reviews Display */}
                    {clinicReviews.length > 0 && (
                        <div className="mt-8">
                            <div className="bg-white rounded-xl border border-gray-200 shadow-lg p-6">
                                <div className="flex items-center gap-3 mb-6">
                                    <div className="w-10 h-10 bg-gradient-to-br from-green-500 to-emerald-600 rounded-lg flex items-center justify-center">
                                        <MessageCircle className="w-5 h-5 text-white" />
                                    </div>
                                    <div>
                                        <h3 className="text-lg font-bold text-gray-900">
                                            Patient Reviews
                                        </h3>
                                        <p className="text-sm text-gray-600">
                                            {clinicReviews.length} review
                                            {clinicReviews.length !== 1
                                                ? "s"
                                                : ""}{" "}
                                            from our patients
                                        </p>
                                    </div>
                                </div>

                                {/* Reviews Grid - Show max 4 reviews initially, 2 columns on desktop */}
                                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    {clinicReviews
                                        .slice(
                                            0,
                                            showAllReviews
                                                ? clinicReviews.length
                                                : 4
                                        )
                                        .map((review, index) => (
                                            <div
                                                key={review.id || index}
                                                className="bg-gray-50 rounded-lg p-4 border border-gray-100 hover:border-blue-200 transition-all duration-200"
                                            >
                                                {/* Review Header */}
                                                <div className="flex items-start gap-3 mb-3">
                                                    {/* Avatar */}
                                                    <div className="flex-shrink-0">
                                                        <div
                                                            className={`w-8 h-8 rounded-lg flex items-center justify-center text-white font-bold text-sm shadow-sm ${getAvatarColor(
                                                                review.patient
                                                                    ?.user
                                                                    ?.name ||
                                                                    "Anonymous"
                                                            )}`}
                                                        >
                                                            {getInitials(
                                                                review.patient
                                                                    ?.user
                                                                    ?.name ||
                                                                    "Anonymous"
                                                            )}
                                                        </div>
                                                    </div>

                                                    {/* User Info */}
                                                    <div className="flex-1 min-w-0">
                                                        <h4 className="font-semibold text-gray-900 mb-1 text-sm">
                                                            {review.patient
                                                                ?.user?.name ||
                                                                "Anonymous"}
                                                        </h4>
                                                        <div className="flex items-center gap-1 text-xs text-gray-500">
                                                            <Calendar className="w-3 h-3" />
                                                            <span>
                                                                {formatDate(
                                                                    review.created_at
                                                                )}
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>

                                                {/* Rating */}
                                                <div className="flex items-center gap-2 mb-3">
                                                    <div className="flex items-center gap-1">
                                                        {[1, 2, 3, 4, 5].map(
                                                            (star) => (
                                                                <Star
                                                                    key={star}
                                                                    className={`w-3 h-3 ${
                                                                        star <=
                                                                        review.rating
                                                                            ? "text-yellow-400 fill-current"
                                                                            : "text-gray-300"
                                                                    }`}
                                                                />
                                                            )
                                                        )}
                                                    </div>
                                                    <span
                                                        className={`text-xs font-medium ${getRatingColor(
                                                            review.rating
                                                        )}`}
                                                    >
                                                        {review.rating}/5
                                                    </span>
                                                </div>

                                                {/* Review Title */}
                                                {review.title && (
                                                    <h5 className="font-medium text-gray-900 mb-2 text-sm">
                                                        {review.title}
                                                    </h5>
                                                )}

                                                {/* Review Content */}
                                                <p className="text-gray-700 text-xs leading-relaxed">
                                                    {review.content ||
                                                        "No review content provided."}
                                                </p>
                                            </div>
                                        ))}
                                </div>

                                {/* Show More/Less Button */}
                                {clinicReviews.length > 4 && (
                                    <div className="text-center mt-6">
                                        <button
                                            onClick={() =>
                                                setShowAllReviews(
                                                    !showAllReviews
                                                )
                                            }
                                            className="inline-flex items-center gap-2 px-6 py-3 bg-gradient-to-r from-blue-50 to-cyan-50 text-blue-700 font-semibold rounded-lg hover:from-blue-100 hover:to-cyan-100 transition-all duration-200 border border-blue-200 hover:border-blue-300"
                                        >
                                            {showAllReviews ? (
                                                <>
                                                    <span>
                                                        Show Less Reviews
                                                    </span>
                                                    <span className="text-xs bg-blue-200 text-blue-800 px-2 py-1 rounded-full">
                                                        Hide{" "}
                                                        {clinicReviews.length -
                                                            4}{" "}
                                                        reviews
                                                    </span>
                                                </>
                                            ) : (
                                                <>
                                                    <span>
                                                        Show All Reviews
                                                    </span>
                                                    <span className="text-xs bg-blue-200 text-blue-800 px-2 py-1 rounded-full">
                                                        +
                                                        {clinicReviews.length -
                                                            4}{" "}
                                                        more
                                                    </span>
                                                </>
                                            )}
                                        </button>
                                        <p className="text-xs text-gray-500 mt-2">
                                            {showAllReviews
                                                ? `Showing all ${clinicReviews.length} reviews`
                                                : `Showing 4 of ${clinicReviews.length} reviews`}
                                        </p>
                                    </div>
                                )}
                            </div>
                        </div>
                    )}
                </div>
            )}

            {/* Review Form - Only show on clinic tab */}
            {activeTab === "clinic" && (
                <div className="mt-6">
                    <div className="bg-white rounded-xl border border-gray-200 shadow-lg p-6">
                        <div className="flex items-center gap-3 mb-6">
                            <div className="w-10 h-10 bg-gradient-to-br from-blue-500 to-cyan-600 rounded-lg flex items-center justify-center">
                                <Star className="w-5 h-5 text-white" />
                            </div>
                            <div>
                                <h3 className="text-lg font-bold text-gray-900">
                                    Write a Review
                                </h3>
                                <p className="text-sm text-gray-600">
                                    Share your experience with other patients
                                </p>
                            </div>
                        </div>

                        {auth ? (
                            <form
                                onSubmit={handleSubmitReview}
                                className="space-y-5"
                            >
                                {/* Rating */}
                                <div>
                                    <label className="block text-sm font-semibold text-gray-700 mb-3">
                                        Your Rating *
                                    </label>
                                    <div className="flex items-center gap-2">
                                        {[1, 2, 3, 4, 5].map((star) => (
                                            <button
                                                key={star}
                                                type="button"
                                                onClick={() =>
                                                    handleStarClick(star)
                                                }
                                                className={`w-8 h-8 transition-all duration-200 hover:scale-110 ${
                                                    star <= reviewForm.rating
                                                        ? "text-yellow-400"
                                                        : "text-gray-300 hover:text-yellow-300"
                                                }`}
                                            >
                                                <Star
                                                    className={`w-full h-full ${
                                                        star <=
                                                        reviewForm.rating
                                                            ? "fill-current"
                                                            : ""
                                                    }`}
                                                />
                                            </button>
                                        ))}
                                        {reviewForm.rating > 0 && (
                                            <span className="ml-2 text-sm font-medium text-gray-600">
                                                {reviewForm.rating}/5
                                            </span>
                                        )}
                                    </div>
                                </div>

                                {/* Review Title */}
                                <div>
                                    <label className="block text-sm font-semibold text-gray-700 mb-2">
                                        Review Title *
                                    </label>
                                    <input
                                        type="text"
                                        value={reviewForm.title}
                                        onChange={(e) =>
                                            handleInputChange(
                                                "title",
                                                e.target.value
                                            )
                                        }
                                        placeholder="Summarize your experience..."
                                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm transition-all duration-200"
                                        maxLength={100}
                                    />
                                    <div className="text-xs text-gray-500 mt-1">
                                        {reviewForm.title.length}/100 characters
                                    </div>
                                </div>

                                {/* Review Content */}
                                <div>
                                    <label className="block text-sm font-semibold text-gray-700 mb-2">
                                        Your Review *
                                    </label>
                                    <textarea
                                        rows={4}
                                        value={reviewForm.content}
                                        onChange={(e) =>
                                            handleInputChange(
                                                "content",
                                                e.target.value
                                            )
                                        }
                                        placeholder="Tell us about your experience at this clinic..."
                                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm resize-none transition-all duration-200"
                                        maxLength={500}
                                    />
                                    <div className="text-xs text-gray-500 mt-1">
                                        {reviewForm.content.length}/500
                                        characters
                                    </div>
                                </div>

                                {/* Submit Button */}
                                <div className="flex justify-end pt-2">
                                    <button
                                        type="submit"
                                        disabled={
                                            isSubmitting ||
                                            !reviewForm.rating ||
                                            !reviewForm.title.trim() ||
                                            !reviewForm.content.trim()
                                        }
                                        className="px-8 py-3 bg-gradient-to-r from-blue-600 to-cyan-600 text-white font-semibold rounded-lg hover:from-blue-700 hover:to-cyan-700 transition-all duration-200 shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2"
                                    >
                                        {isSubmitting ? (
                                            <>
                                                <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                                                Submitting...
                                            </>
                                        ) : (
                                            <>
                                                <Star className="w-4 h-4" />
                                                Submit Review
                                            </>
                                        )}
                                    </button>
                                </div>
                            </form>
                        ) : (
                            <div className="text-center py-8">
                                <div className="mb-6">
                                    <div className="w-16 h-16 bg-gradient-to-br from-gray-100 to-gray-200 rounded-full flex items-center justify-center mx-auto mb-4">
                                        <User className="w-8 h-8 text-gray-400" />
                                    </div>
                                    <h4 className="text-lg font-semibold text-gray-900 mb-2">
                                        Sign in to write a review
                                    </h4>
                                    <p className="text-sm text-gray-600 max-w-md mx-auto">
                                        Help other patients by sharing your
                                        experience with this clinic
                                    </p>
                                </div>
                                <button className="px-6 py-3 bg-gray-600 text-white font-semibold rounded-lg hover:bg-gray-700 transition-all duration-200 shadow-lg hover:shadow-xl">
                                    Sign In to Review
                                </button>
                            </div>
                        )}
                    </div>
                </div>
            )}

            {/* Doctor Review Modal */}
            {showDoctorReviewModal && selectedDoctor && (
                <DoctorReviewModal
                    isOpen={showDoctorReviewModal}
                    onClose={handleCloseDoctorReviewModal}
                    doctor={selectedDoctor}
                    clinic={clinic}
                    onReviewSubmitted={handleDoctorReviewSubmitted}
                />
            )}
        </div>
    );
}
